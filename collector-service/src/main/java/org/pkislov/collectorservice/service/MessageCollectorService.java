package org.pkislov.collectorservice.service;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.pkislov.collectorservice.client.RecipientClient;import org.pkislov.collectorservice.dto.MessageDto;import org.pkislov.collectorservice.entity.Message;import org.pkislov.collectorservice.repository.MessageRepository;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.stereotype.Service;import java.util.List;@Slf4j@Service@RequiredArgsConstructorpublic class MessageCollectorService {    private final RecipientClient recipientClient;    private final MessageRepository messageRepository;    @Scheduled(fixedRateString = "${recipient.scheduler.interval:30}000")    public List<MessageDto> getMessages() {        log.info("Trying to collect messages");        var messages = recipientClient.getMessage();        List<Message> messageEntities = messages.stream()                .map(messageDto -> {                    Message message = new Message();                    message.setMessage(messageDto.getMessage());                    message.setUsername(messageDto.getUser());                    return message;                }).toList();        messageRepository.saveAll(messageEntities);        log.info("Received messages: {}", messages);        return messages;    }}